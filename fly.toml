app = "erpnext-fe"
primary_region = "fra"
kill_signal = "SIGINT"
kill_timeout = "15s"

[build]
image = "frappe/erpnext:v15.27.0"

[env]
# Nginx frontend configuration
BACKEND = "127.0.0.1:8000"
SOCKETIO = "127.0.0.1:9000"
FRAPPE_SITE_NAME_HEADER = "frontend"
UPSTREAM_REAL_IP_ADDRESS = "127.0.0.1"
UPSTREAM_REAL_IP_HEADER = "X-Forwarded-For"
UPSTREAM_REAL_IP_RECURSIVE = "off"
PROXY_READ_TIMEOUT = "120"
CLIENT_MAX_BODY_SIZE = "50m"

# Site configuration
BOOTSTRAP_SITE = "frontend"
AUTO_BOOTSTRAP = "1"
BENCH_INIT = "1"

# Database configuration (will be set by deployment script)
# DB_HOST = "erpnext-db.internal"
# DB_PORT = "5432"
# DATABASE_URL will be injected by Fly.io

# Redis configuration (will be set by deployment script)  
# REDIS_CACHE_URL will be injected by Fly.io
# REDIS_QUEUE_URL will be injected by Fly.io

[[mounts]]
source = "frappe_sites"
destination = "/home/frappe/frappe-bench/sites"

[[vm]]
memory = "2gb"
cpu_kind = "shared"
cpus = 2

[[processes]]
name = "configurator"
cmd = ["bash", "-c", "if [[ ! -f /home/frappe/frappe-bench/sites/common_site_config.json ]]; then /home/frappe/frappe-bench/env/bin/python /opt/frappe/configure.py; fi"]

[[processes]]
name = "create-site"
cmd = ["new"]

[[processes]]
name = "frontend"
cmd = ["nginx-entrypoint.sh"]

[[processes]]
name = "backend"

[[processes]]
name = "websocket"
cmd = ["node", "/home/frappe/frappe-bench/apps/frappe/socketio.js"]

[[processes]]
name = "scheduler"
cmd = ["schedule"]

[[processes]]
name = "queue-default"
cmd = ["worker"]
[processes.env]
WORKER_TYPE = "default"

[[processes]]
name = "queue-short"
cmd = ["worker"]
[processes.env]
WORKER_TYPE = "short"

[[processes]]
name = "queue-long"
cmd = ["worker"]
[processes.env]
WORKER_TYPE = "long"

[[services]]
processes = ["frontend"]
internal_port = 8080
protocol = "tcp"
auto_stop_machines = true
auto_start_machines = true
min_machines_running = 0

[[services.ports]]
handlers = ["http"]
port = 80

[[services.ports]]
handlers = ["tls", "http"]
port = 443

[[services.tcp_checks]]
interval = "15s"
timeout = "2s"
grace_period = "120s"
restart_limit = 6

[deploy]
strategy = "rolling"






















